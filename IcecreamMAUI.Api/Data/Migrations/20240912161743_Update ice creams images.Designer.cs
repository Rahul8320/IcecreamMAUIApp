// <auto-generated />
using System;
using IcecreamMAUI.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IcecreamMAUI.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240912161743_Update ice creams images")]
    partial class Updateicecreamsimages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("IcecreamMAUI.Api.IceCreams.Entities.IceCream", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("IceCreams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "https://images.unsplash.com/photo-1607920591413-4ec007e70023?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Chocolate Delight",
                            Price = 415.17000000000002
                        },
                        new
                        {
                            Id = 2,
                            Image = "https://plus.unsplash.com/premium_photo-1690440686714-c06a56a1511c?q=80&w=1964&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Vanilla Dream",
                            Price = 331.17000000000002
                        },
                        new
                        {
                            Id = 3,
                            Image = "https://images.unsplash.com/photo-1532678465554-94846274c297?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Strawberry Swirl",
                            Price = 372.67000000000002
                        },
                        new
                        {
                            Id = 4,
                            Image = "https://plus.unsplash.com/premium_photo-1678198786424-c2cc6593f59c?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Minty Fresh",
                            Price = 357.06999999999999
                        },
                        new
                        {
                            Id = 5,
                            Image = "https://images.unsplash.com/photo-1576506295286-5cda18df43e7?q=80&w=1935&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Coffee Buzz",
                            Price = 397.56999999999999
                        },
                        new
                        {
                            Id = 6,
                            Image = "https://images.unsplash.com/photo-1570197788417-0e82375c9371?q=80&w=1912&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Caramel Craze",
                            Price = 438.06999999999999
                        },
                        new
                        {
                            Id = 7,
                            Image = "https://images.unsplash.com/photo-1560008581-09826d1de69e?q=80&w=1944&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Peanut Butter Blast",
                            Price = 415.17000000000002
                        },
                        new
                        {
                            Id = 8,
                            Image = "https://images.unsplash.com/photo-1580915411954-282cb1b0d780?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Cookies and Cream",
                            Price = 372.67000000000002
                        },
                        new
                        {
                            Id = 9,
                            Image = "https://images.unsplash.com/photo-1534706936160-d5ee67737249?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Lemon Zest",
                            Price = 381.76999999999998
                        },
                        new
                        {
                            Id = 10,
                            Image = "https://plus.unsplash.com/premium_photo-1670574528579-c7eec79d7b7c?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            Name = "Raspberry Ripple",
                            Price = 397.56999999999999
                        });
                });

            modelBuilder.Entity("IcecreamMAUI.Api.IceCreams.Entities.IceCreamOption", b =>
                {
                    b.Property<int>("IceCreamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Flavour")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Topping")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("IceCreamId", "Flavour", "Topping");

                    b.ToTable("IceCreamOptions");

                    b.HasData(
                        new
                        {
                            IceCreamId = 1,
                            Flavour = "Dark Chocolate",
                            Topping = "Choco Chips"
                        },
                        new
                        {
                            IceCreamId = 1,
                            Flavour = "Milk Chocolate",
                            Topping = "Whipped Cream"
                        },
                        new
                        {
                            IceCreamId = 2,
                            Flavour = "French Vanilla",
                            Topping = "Caramel Syrup"
                        },
                        new
                        {
                            IceCreamId = 2,
                            Flavour = "Classic Vanilla",
                            Topping = "Rainbow Sprinkles"
                        },
                        new
                        {
                            IceCreamId = 3,
                            Flavour = "Strawberry",
                            Topping = "Fresh Strawberries"
                        },
                        new
                        {
                            IceCreamId = 3,
                            Flavour = "Strawberry Cheesecake",
                            Topping = "Graham Cracker Crumble"
                        },
                        new
                        {
                            IceCreamId = 4,
                            Flavour = "Mint",
                            Topping = "Chocolate Shavings"
                        },
                        new
                        {
                            IceCreamId = 4,
                            Flavour = "Mint Chocolate Chip",
                            Topping = "Mint Leaves"
                        },
                        new
                        {
                            IceCreamId = 5,
                            Flavour = "Espresso",
                            Topping = "Chocolate Espresso Beans"
                        },
                        new
                        {
                            IceCreamId = 5,
                            Flavour = "Mocha",
                            Topping = "Coffee Syrup"
                        },
                        new
                        {
                            IceCreamId = 6,
                            Flavour = "Salted Caramel",
                            Topping = "Caramel Swirls"
                        },
                        new
                        {
                            IceCreamId = 6,
                            Flavour = "Butterscotch",
                            Topping = "Toasted Almonds"
                        },
                        new
                        {
                            IceCreamId = 7,
                            Flavour = "Peanut Butter",
                            Topping = "Crushed Peanuts"
                        },
                        new
                        {
                            IceCreamId = 7,
                            Flavour = "Chocolate Peanut Butter",
                            Topping = "Peanut Butter Cups"
                        },
                        new
                        {
                            IceCreamId = 8,
                            Flavour = "Cookies and Cream",
                            Topping = "Oreo Crumbles"
                        },
                        new
                        {
                            IceCreamId = 8,
                            Flavour = "Double Chocolate",
                            Topping = "Chocolate Sauce"
                        },
                        new
                        {
                            IceCreamId = 9,
                            Flavour = "Lemon",
                            Topping = "Lemon Zest"
                        },
                        new
                        {
                            IceCreamId = 9,
                            Flavour = "Lemon Meringue",
                            Topping = "Meringue Bits"
                        },
                        new
                        {
                            IceCreamId = 10,
                            Flavour = "Raspberry",
                            Topping = "Fresh Raspberries"
                        },
                        new
                        {
                            IceCreamId = 10,
                            Flavour = "Raspberry Cheesecake",
                            Topping = "White Chocolate Chips"
                        });
                });

            modelBuilder.Entity("IcecreamMAUI.Api.Orders.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderAt")
                        .HasColumnType("TEXT");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("IcecreamMAUI.Api.Orders.Entities.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("IceCreamFlavour")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("IceCreamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IceCreamName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<double>("IceCreamPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("IceCreamTopping")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<long>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("IcecreamMAUI.Api.Users.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IcecreamMAUI.Api.IceCreams.Entities.IceCreamOption", b =>
                {
                    b.HasOne("IcecreamMAUI.Api.IceCreams.Entities.IceCream", "IceCream")
                        .WithMany("Options")
                        .HasForeignKey("IceCreamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IceCream");
                });

            modelBuilder.Entity("IcecreamMAUI.Api.Orders.Entities.OrderItem", b =>
                {
                    b.HasOne("IcecreamMAUI.Api.Orders.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("IcecreamMAUI.Api.IceCreams.Entities.IceCream", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("IcecreamMAUI.Api.Orders.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
